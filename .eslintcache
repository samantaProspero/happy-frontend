[{"/media/samanta/1TB/NLW3Happy/web/src/pages/Orphanage.tsx":"1","/media/samanta/1TB/NLW3Happy/web/src/pages/CreateOrphanage.tsx":"2","/media/samanta/1TB/NLW3Happy/web/src/pages/Landing.tsx":"3","/media/samanta/1TB/NLW3Happy/web/src/pages/OrphanagesMap.tsx":"4","/home/samanta/Documentos/GitHub/happy-frontend/src/App.tsx":"5","/home/samanta/Documentos/GitHub/happy-frontend/src/pages/CreateOrphanage.tsx":"6","/home/samanta/Documentos/GitHub/happy-frontend/src/pages/OrphanagesMap.tsx":"7"},{"size":4076,"mtime":1609331261626,"results":"8","hashOfConfig":"9"},{"size":5454,"mtime":1609338418904,"results":"10","hashOfConfig":"9"},{"size":807,"mtime":1609097487979,"results":"11","hashOfConfig":"9"},{"size":2416,"mtime":1609331229928,"results":"12","hashOfConfig":"9"},{"size":200,"mtime":1609261911121,"results":"13","hashOfConfig":"14"},{"size":5454,"mtime":1609338418904,"results":"15","hashOfConfig":"14"},{"size":2416,"mtime":1609331229928,"results":"16","hashOfConfig":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"16vgsmi",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fzlhnd",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/samanta/1TB/NLW3Happy/web/src/pages/Orphanage.tsx",["32","33"],"import React, { useEffect, useState } from \"react\";\nimport { FaWhatsapp } from \"react-icons/fa\";\nimport { FiClock, FiInfo } from \"react-icons/fi\";\nimport { Map, Marker, TileLayer } from \"react-leaflet\";\nimport {useParams} from 'react-router-dom';\n\nimport '../styles/pages/orphanage.css';\nimport mapIcon from '../utils/mapIcon';\n\nimport Sidebar from \"../components/Sidebar\";\nimport api from \"../services/api\";\n\ninterface Orphanage {\n  id: number,\n  latitude: number,\n  longitude: number,\n  name: string,\n  about: string,\n  instructions: string,\n  opening_hours: string,\n  open_on_weekends: string,\n  images: Array<{\n    id: number;\n    url: string;\n  }>,\n}\ninterface OrphanageParams {\n  id: string,\n\n}\n\nexport default function Orphanage() {\n  const params = useParams<OrphanageParams>();\n  const [orphanage, setOrphanage]=useState<Orphanage>();\n  const [activeImageIndex, SetActiveImageIndex] = useState(0);\n\n  useEffect(()=> {\n    api.get(`orphanages/${params.id}`).then(response => {\n      setOrphanage(response.data)\n    })\n  }, [params.id]);\n\n  if(!orphanage){\n    return <p>Carregando...</p>\n  }\n\n\n  return (\n    <div id=\"page-orphanage\">\n      <Sidebar />\n\n      <main>\n        <div className=\"orphanage-details\">\n          <img src={orphanage.images[activeImageIndex].url} alt={orphanage.name} />\n\n          <div className=\"images\">\n            {orphanage.images.map((image, index) => {\n              return(\n                <button \n                  key={image.id} \n                  className={ activeImageIndex === index ? 'active' : ''}\n                  type=\"button\"\n                  onClick = {() => {\n                    SetActiveImageIndex(index)\n                  }} \n                  >\n                  <img src={image.url} alt={orphanage.name} />\n                </button>\n              )\n            })}\n          </div>\n          \n          <div className=\"orphanage-details-content\">\n            <h1>{orphanage.name}</h1>\n            <p>{orphanage.about}</p>\n\n            <div className=\"map-container\">\n              <Map\n                center={[orphanage.latitude, orphanage.longitude]} \n                zoom={16} \n                style={{ width: '100%', height: 280 }}\n                dragging={false}\n                touchZoom={false}\n                zoomControl={false}\n                scrollWheelZoom={false}\n                doubleClickZoom={false}\n              >\n                <TileLayer \n                  url={`https://api.mapbox.com/styles/v1/mapbox/light-v10/tiles/256/{z}/{x}/{y}@2x?access_token=${process.env.REACT_APP_MAPBOX_TOKEN}`}\n                />\n                <Marker interactive={false} icon={mapIcon} position={[orphanage.latitude, orphanage.longitude]} />\n              </Map>\n\n              <footer>\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://www.google.com.br/maps/dir/?api=1&destination=${orphanage.latitude},${orphanage.longitude}`}>Ver rotas no Google Maps</a>\n              </footer>\n            </div>\n\n            <hr />\n\n            <h2>Instruções para visita</h2>\n            <p>{orphanage.instructions}</p>\n\n            <div className=\"open-details\">\n              <div className=\"hour\">\n                <FiClock size={32} color=\"#15B6D6\" />\n                {orphanage.opening_hours}\n              </div>\n              {orphanage.open_on_weekends ? (\n                <div className=\"open-on-weekends\">\n                  <FiInfo size={32} color=\"#39CC83\" />\n                  Atendemos <br />\n                  fim de semana\n                </div>              \n              ):(\n                <div className=\"open-on-weekends dont-open\">\n                  <FiInfo size={32} color=\"#FF669D\" />\n                  Não Atendemos <br />\n                  fim de semana\n                </div>\n\n              )\n\n              }\n            </div>\n\n            <button type=\"button\" className=\"contact-button\">\n              <FaWhatsapp size={20} color=\"#FFF\" />\n              Entrar em contato\n            </button>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}","/media/samanta/1TB/NLW3Happy/web/src/pages/CreateOrphanage.tsx",[],"/media/samanta/1TB/NLW3Happy/web/src/pages/Landing.tsx",[],"/media/samanta/1TB/NLW3Happy/web/src/pages/OrphanagesMap.tsx",[],"/home/samanta/Documentos/GitHub/happy-frontend/src/App.tsx",[],"/home/samanta/Documentos/GitHub/happy-frontend/src/pages/CreateOrphanage.tsx",[],"/home/samanta/Documentos/GitHub/happy-frontend/src/pages/OrphanagesMap.tsx",[],{"ruleId":"34","severity":1,"message":"35","line":32,"column":25,"nodeType":"36","messageId":"37","endLine":32,"endColumn":34},{"ruleId":"38","severity":1,"message":"39","line":34,"column":44,"nodeType":"36","messageId":"40","endLine":34,"endColumn":53},"@typescript-eslint/no-redeclare","'Orphanage' is already defined.","Identifier","redeclared","@typescript-eslint/no-unused-vars","'Orphanage' is defined but never used.","unusedVar"]